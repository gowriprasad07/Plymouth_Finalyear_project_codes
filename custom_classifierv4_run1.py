# -*- coding: utf-8 -*-
"""Custom_ClassifierV4_Run1

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11hr2Ggol-PGc_tVw1PxuczefimCtHJr-
"""

from google.colab import drive
drive.mount('/content/gdrive')

from sklearn.feature_extraction.text import CountVectorizer, TfidfTransformer
from joblib import dump, load # used for saving and loading sklearn objects

#load classifier model
sgd_classifier = load('/content/gdrive/My Drive/Colab Notebooks/Custom_V5/V1_1/sgd_classifier_with_bgc.joblib')
bigram_vectorizer = load('/content/gdrive/My Drive/Colab Notebooks/Custom_V5/V1_1/bigram_vectorizer.joblib')
#bigram_tf_idf_transformer = load('/content/gdrive/My Drive/Colab Notebooks/Custom_V4/bigram_tf_idf_transformer.joblib')

from nltk.corpus import stopwords
import nltk
import time
nltk.download("stopwords")
l_sw=stopwords.words("english")

def stopw(s):
  temp=''
  s=s.split()
  for i in s:
    if i.lower() not in l_sw:
      temp+=(i+" ")
  
  return temp[:-1]

import pickle

f=open("/content/gdrive/My Drive/Colab Notebooks/Sentiment_DatasetV2.pickle","rb")
nf=open("/content/gdrive/My Drive/Colab Notebooks/Custom_V5/CSA_V4_1_Results_Trials.pickle","wb")

l=[]
l_org=[]
flag=0

while 1:
  try:
    a=pickle.load(f)
    l_org.append(a)
    l.append(stopw(a["tweet_text"]))
  except EOFError:
    break

l_org[0]

start_time=time.time()
testing_x=bigram_vectorizer.transform(l)
#testing_x = bigram_tf_idf_transformer.transform(testing_x)

result=sgd_classifier.predict(testing_x)
end_time=time.time()
print(end_time-start_time)

result[0:10]

l1=[]
for i in l_org:
  #l1.append(stopw(a["porter"]))
  l1.append(i["porter"])

start_time=time.time()
testing_x=bigram_vectorizer.transform(l1)
#testing_x = bigram_tf_idf_transformer.transform(testing_x)

result_p=sgd_classifier.predict(testing_x)
end_time=time.time()
print(end_time-start_time)

result_p[0:20]

l2=[]
for i in l_org:
  l2.append(i["snowball"])

start_time=time.time()
testing_x=bigram_vectorizer.transform(l2)
#testing_x = bigram_tf_idf_transformer.transform(testing_x)

result_s=sgd_classifier.predict(testing_x)
end_time=time.time()
print(end_time-start_time)

result_s[0:20]

#Aggregate and save results
nf=open("/content/gdrive/My Drive/Colab Notebooks/Custom_V5/CSA_V4_1_Results_Trials.pickle","wb")

i=0

convert={-1:"neg",0:"neu",1:"pos"}

while 1:
  try:
    temp={}
    temp["tweet_id"]=l_org[i]["tweet_id"]
    temp["tweet_text"]=convert[result[i]]
    temp["porter"]=convert[result_p[i]]
    temp["snowball"]=convert[result_s[i]]
    pickle.dump(temp,nf)
    i+=1
  except:
    break
print("Done")

i

nf.close()

nf=open("/content/gdrive/My Drive/Colab Notebooks/Custom_V5/CSA_V4_1_Results_Trials.pickle","rb")

a=pickle.load(nf)
a

a=pickle.load(nf)
a=pickle.load(nf)
a
nf.close()

a